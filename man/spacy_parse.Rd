% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spacy_parse.R
\name{spacy_parse}
\alias{spacy_parse}
\title{parse a text using spaCy}
\usage{
spacy_parse(x, pos_tag = TRUE, tagset_detailed = TRUE,
  tagset_google = TRUE, lemma = FALSE, named_entity = FALSE,
  dependency = FALSE, full_parse = FALSE, ...)
}
\arguments{
\item{x}{a character or \pkg{quanteda} corpus object}

\item{pos_tag}{logical; if \code{TRUE}, tag parts of speech}

\item{tagset_detailed}{logical whether a detailed tagset outcome is included in the result.
In the case of using \code{"en"} model, default tagset is scheme from the Penn Treebank. 
In the case of using \code{"de"} model, default tagset is scheme from the German Text Archive (http://www.deutschestextarchiv.de/doku/pos).}

\item{tagset_google}{logical whether a simplified \code{"google"} tagset will be 
returned.}

\item{lemma}{logical; inlucde lemmatized tokens in the output}

\item{named_entity}{logical; if \code{TRUE}, report named entities}

\item{dependency}{logical; if \code{TRUE}, analyze and return dependencies}

\item{full_parse}{logical; if \code{TRUE}, conduct the one-shot parse 
regardless of the value of other parameters. This  option exists because 
the parsing outcomes of named entities are slightly different different 
when named entities are run separately from the parsing.}

\item{...}{not used directly}
}
\value{
an tokenized text object
}
\description{
The spacy_parse() function calls spaCy to both tokenize and tag the texts,
and returns a data.table of the results. 
The function provides options on the types of tagsets (\code{tagset_} options)
either  \code{"google"} or \code{"detailed"}, as well
as lemmatization (\code{lemma}).
It provides a functionalities of dependency parsing and named entity 
recognition as an option. If \code{"full_parse = TRUE"} is provided, 
the function returns the most extensive list of the parsing results from spaCy.
}
\examples{
\donttest{
spacy_initialize()
# See Chap 5.1 of the NLTK book, http://www.nltk.org/book/ch05.html
txt <- "And now for something completely different."
spacy_parse(txt)
spacy_parse(txt, pos_tag = FALSE)
spacy_parse(txt, dependency = TRUE)

txt2 <- c(doc1 = "The fast cat catches mice.\\\\nThe quick brown dog jumped.", 
          doc2 = "This is the second document.",
          doc3 = "This is a \\\\\\"quoted\\\\\\" text." )
spacy_parse(txt2, full_parse = TRUE, named_entity = TRUE, dependency = TRUE)
}
}
